{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","API_URL","getData","url","a","fetch","response","json","FindMovie","addMovie","useState","setMovie","inputValue","setInputValue","isError","setError","submitHandler","event","preventDefault","movieFromServer","Title","Plot","Poster","imdbID","Response","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","replace","onClick","find","film","App","state","data","every","item","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f58bf22.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","export const API_URL = 'https://www.omdbapi.com/?apikey=1b552020&t=';\n\nexport async function getData(url: string) {\n  const response = await fetch(`${API_URL}${url}`);\n\n  return response.json();\n}\n","import React, {\n  FC,\n  useState,\n  ChangeEvent,\n  FormEvent,\n} from 'react';\n\nimport { MovieCard } from '../MovieCard';\nimport { getData } from '../../api/api';\n\nimport './FindMovie.scss';\n\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n  movies: Movie[];\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie, movies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [inputValue, setInputValue] = useState('');\n  const [isError, setError] = useState(false);\n\n  const submitHandler = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const movieFromServer = await getData(inputValue);\n    const {\n      Title: title,\n      Plot: description,\n      Poster: imgUrl,\n      imdbID: imdbId,\n      Response,\n    } = movieFromServer;\n\n    if (Response === 'True') {\n      const imdbUrl = `https://www.imdb.com/title/${imdbId}`;\n      const newMovie = {\n        title,\n        description,\n        imgUrl,\n        imdbId,\n        imdbUrl,\n      };\n\n      setMovie(newMovie);\n      setError(false);\n    } else {\n      setError(true);\n    }\n  };\n\n  const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setInputValue(value.replace(/^\\s/, ''));\n  };\n\n  const movieSearchHandler = () => {\n    if (movie) {\n      const sameMovieTitle = movies.find(film => film.title === movie.title);\n\n      if (sameMovieTitle) {\n        setError(true);\n      } else {\n        addMovie(movie);\n        setInputValue('');\n        setError(false);\n        setMovie(null);\n      }\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={submitHandler}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n          Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={isError ? 'input is-danger' : 'input'}\n              value={inputValue}\n              onChange={changeHandler}\n            />\n          </div>\n\n          {isError\n          && (\n            <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title or the movie already exists.\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={movieSearchHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        { movie && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nimport './App.scss';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component <{}, State> {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie: Movie) => {\n    const filter = this.state.movies.every(item => item.imdbId !== movie.imdbId);\n\n    if (filter) {\n      this.setState(prevState => ({\n        movies: [...prevState.movies, movie],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} movies={movies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}